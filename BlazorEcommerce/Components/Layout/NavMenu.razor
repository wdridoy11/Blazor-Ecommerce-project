@* @implements IDisposable *@
@using BlazorEcommerce.Services
@inject NavigationManager NavigationManager
@inject SharedStateService _sharedStateService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ICartRepository _cartRepository
<nav>
    <div class="bg-slate-700 px-5 py-3 lg:px-10">
        <div class="flex items-center justify-between">
            <div class="flex items-center gap-8">
                <div>
                    <NavLink class="text-base text-white"  href="/">Home</NavLink>
                </div>
                <div>
                    <NavLink class="text-base text-white" href="/">Product</NavLink>
                </div>
                <div>
                    <NavLink class="text-base text-white" href="/cart">Cart (@_sharedStateService.TotalCartCount)</NavLink>
                </div>
                <div>
                    <NavLink class="text-base text-white" href="/">Product</NavLink>
                </div>
            </div>
            <div>
                <AuthorizeView>
                    <Authorized>
                        <div class="flex items-center gap-5">
                            <div>
                                <NavLink class="text-base text-white" href="Account/Manage">@context.User.Identity?.Name</NavLink>
                            </div>
                            <div>
                                <form action="Account/Logout" method="post">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                    <button type="submit">Logout</button>
                                </form>
                            </div>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="flex items-center gap-10">
                            <div>
                                <NavLink class="text-base text-white" href="Account/Register">Register</NavLink>
                            </div>
                            <div>
                                <NavLink class="text-base text-white" href="Account/Login">Login</NavLink>
                            </div>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        _sharedStateService.OnChange += OnSharedStateChange;

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }



    private void OnSharedStateChange()
    {
        InvokeAsync(StateHasChanged);
    }

    public async Task GetInitialCount()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _sharedStateService.TotalCartCount = await _cartRepository.GetTotalCartCountAsync(user?.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value);

    }
    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        _sharedStateService.OnChange -= OnSharedStateChange;
    }

}

