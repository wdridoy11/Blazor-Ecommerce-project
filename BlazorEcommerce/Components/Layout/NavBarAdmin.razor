@implements IDisposable

@inject NavigationManager NavigationManager

<div>
    <div>
        <div class="">
            <div class="">
                <a class="" href="/">
                    <img class="mx-auto w-9/12 py-5" src="./images/logo.png" alt="Logo" />
                </a>
            </div>
        </div>

        <div onclick="document.querySelector('.navbar-toggler').click()">
            <nav class="flex flex-col items-start px-5">
                <div class="w-full cursor-pointer rounded-md p-3 hover:bg-slate-100">
                    <NavLink class="flex items-center gap-2 text-base font-medium text-gray-500" Match="NavLinkMatch.All" href="/">
                        <i class="fa-solid fa-border-all"></i> <p>Dashboard</p>
                    </NavLink>
                </div>
                <div class="w-full cursor-pointer rounded-md p-3 hover:bg-slate-100">
                    <NavLink class="flex items-center gap-2 text-base font-medium text-gray-500" Match="NavLinkMatch.All" href="category">
                        <i class="fa-solid fa-list"></i> <p>Add Category</p>
                    </NavLink>
                </div>
                <div class="w-full cursor-pointer rounded-md p-3 hover:bg-slate-100">
                    <NavLink class="flex items-center gap-2 text-base font-medium text-gray-500" Match="NavLinkMatch.All" href="product">
                        <i class="fa-solid fa-bag-shopping"></i> <p>Add Product</p>
                    </NavLink>
                </div>
                <div class="w-full cursor-pointer rounded-md p-3 hover:bg-slate-100">
                    <NavLink class="flex items-center gap-2 text-base font-medium text-gray-500" Match="NavLinkMatch.All" href="auth">
                        Auth Required
                    </NavLink>
                </div>
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Manage">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="nav-link">
                                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Register">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Login">
                                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </nav>
        </div>
    </div>
</div>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

