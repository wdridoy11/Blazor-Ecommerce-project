@page "/product/Details/{id:int}"
@inject IProductRepository _productRepository

@if (IsProcessing)
{
    <div>
        <div>
            <p>Loading.....</p>
        </div>
    </div>
}
else
{
    <div>
        <div class="container mx-auto px-5 shadow-lg">
            <div class="">
                <div class="grid grid-cols-1 gap-10 lg:grid-cols-2">
                    <div>
                        <div class="">
                            <img src=@Product.ImageUrl
                                 alt=@Product.Name
                                 class="mx-auto h-[600px] w-1/2 object-cover" />
                        </div>
                    </div>

                    <div>
                        <h1 class="mb-2 text-3xl font-bold text-gray-900">@Product.Name</h1>
                        <div>
                            <div class="flex items-center">
                                <span class="font-medium text-green-600">(@Product.StockQuantity) In Stock</span>
                            </div>
                            <div class="mb-6 flex items-center space-x-4">
                                <span class="text-3xl font-bold text-blue-600">$@Product.Price</span>
                                <del class="text-xl text-gray-500 line-through">$@Product.DiscountPrice</del>
                            </div>
                        </div>

                        <div>
                            <label class="mb-2 block text-sm font-medium text-gray-700"> Quantity</label>
                             <div class="flex items-center space-x-3">

                                <button class="rounded-md border border-gray-300 p-2 hover:bg-gray-50" @onclick='() => HandleQuantityCounter("decrement")'>
                                    <i class="fa-solid fa-minus"></i>
                                </button>

                                <span class="min-w-[60px] rounded-md border border-gray-300 px-4 py-2 text-center">@QuantityCounter</span>

                                <button class="rounded-md border border-gray-300 p-2 hover:bg-gray-50" @onclick='() => HandleQuantityCounter("increment")'>
                                    <i class="fa-solid fa-plus"></i>
                                </button>

                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private int QuantityCounter { get; set; } = 1;
    private bool IsProcessing { get; set; } = false;
    private Product Product { get; set; } = new Product();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        Product = await _productRepository.GetAsync(Id);
    }

    private void HandleQuantityCounter(string value)
    {
        if(value == "increment")
        {
            QuantityCounter++;
        }
        else if(value == "decrement" && QuantityCounter > 1)
        {
            QuantityCounter--;
        }
    }

}
